from flask import Flask
import threading
import os
import asyncio
from aiogram import Bot, Dispatcher
from aiogram.filters import Command
from aiogram.types import Message

# === Flask –≤–µ–±-—Å–µ—Ä–≤–µ—Ä ===
app = Flask(__name__)

@app.route('/')
def home():
    return "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! üöÄ"

@app.route('/health')
def health():
    return {"status": "ok"}, 200

# –ó–∞–ø—É—Å–∫ Flask –≤ —Ñ–æ–Ω–µ
def run_web():
    port = int(os.environ.get('PORT', 10000))
    app.run(host='0.0.0.0', port=port)

# === Telegram –±–æ—Ç ===
TOKEN = os.getenv("BOT_TOKEN")
if not TOKEN:
    raise RuntimeError("–ù–µ –∑–∞–¥–∞–Ω BOT_TOKEN")

bot = Bot(token=TOKEN)
dp = Dispatcher()

@dp.startup()
async def startup():
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")

@dp.message(Command("start"))
async def start(message: Message):
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç.")

# === –ó–∞–ø—É—Å–∫ ===
async def start_bot():
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    thread = threading.Thread(target=run_web, daemon=True)
    thread.start()

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(start_bot())
